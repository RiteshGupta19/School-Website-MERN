name: Deploy MERN App

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies
        working-directory: ./client
        run: npm install

      - name: Build frontend
        working-directory: ./client
        run: npm run build

      - name: Install backend dependencies
        working-directory: ./server
        run: npm install

      - name: Deploy to server (via SSH)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          GCP_KEY: ${{ secrets.GCP_KEY }}
        run: |
          # Save the private key to a file
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          # SSH into the server and run the commands
          ssh -i private_key -o StrictHostKeyChecking=no riteshgupta0968@$SERVER_IP << 'EOF'
            # Navigate to the server directory
            cd /home/riteshgupta0968/susanskar/server

            # Pull latest changes from the repo
            git pull

            # Install server dependencies
            npm install

            # Write the GCP_KEY secret to a gcp-key.json file
            echo "$GCP_KEY" > gcp-key.json
            chmod 600 gcp-key.json

            # Set the GOOGLE_APPLICATION_CREDENTIALS environment variable
            export GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/gcp-key.json

            # Restart PM2 processes
            pm2 restart all
            
            # Navigate to the client directory
            cd /home/riteshgupta0968/susanskar/client

            # Build frontend if necessary (if not already done in CI/CD)
            npm run build

            # Optionally restart NGINX if there were frontend changes
            sudo nginx -t
            sudo systemctl restart nginx
          EOF

          # Clean up the private key file
          rm -f private_key

