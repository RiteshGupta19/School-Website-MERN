name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # This triggers the pipeline when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Runner for the GitHub Actions workflow

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Use Node.js version 20.x

    - name: Install Dependencies
      run: |
        cd client && npm install
        cd ../server && npm install

    - name: Build Frontend
      run: | 
        cd client
        npm run build 

    - name: Deploy to Server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # GitHub Secrets for SSH Key
        SERVER_IP: ${{ secrets.SERVER_IP }}  # GitHub Secrets for the server IP
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Set up the private key for SSH access
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts  # Add the server to known hosts

        # Deploy Frontend
        scp -r client/dist/ riteshgupta0968@$SERVER_IP:/home/riteshgupta0968/frontend/client/dist

        # Deploy Backend
        scp -r server/ riteshgupta0968@$SERVER_IP:/home/riteshgupta0968/frontend/server

        # Restart Backend using PM2
        ssh riteshgupta0968@$SERVER_IP << EOF
          cd /home/riteshgupta0968/frontend/server
          npm install  # Install dependencies on the server
          pm2 restart server.js  # Restart the backend with PM2
        EOF

    - name: Reload Nginx
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: |
        ssh riteshgupta0968@$SERVER_IP "sudo systemctl restart nginx"  # Restart Nginx to serve the new build
